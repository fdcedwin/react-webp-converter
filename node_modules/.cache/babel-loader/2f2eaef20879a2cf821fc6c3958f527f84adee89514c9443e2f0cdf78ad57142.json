{"ast":null,"code":"var _jsxFileName = \"/Users/fdc-edwin-nc-fe/Documents/react-webp-converter/image-converter-webapp/src/components/Converter.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport imageCompression from 'browser-image-compression';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Converter = () => {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [convertedFiles, setConvertedFiles] = useState([]);\n  const [status, setStatus] = useState(\"\");\n  const handleFileSelection = event => {\n    setSelectedFiles([...event.target.files]);\n    setConvertedFiles([]);\n    setStatus(\"\");\n  };\n  const convertToWebP = async () => {\n    if (!selectedFiles.length) {\n      setStatus(\"Please select images to convert!\");\n      return;\n    }\n    const options = {\n      fileType: \"image/webp\",\n      maxSizeMB: 1,\n      // Max size of the output file\n      useWebWorker: true\n    };\n    const converted = [];\n    setStatus(\"Converting images...\");\n    for (const file of selectedFiles) {\n      try {\n        const compressedFile = await imageCompression(file, options);\n        converted.push(compressedFile);\n      } catch (error) {\n        console.error(\"Error converting file:\", error);\n      }\n    }\n    setConvertedFiles(converted);\n    setStatus(`${converted.length} images converted successfully!`);\n  };\n  const downloadFile = file => {\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(file);\n    link.download = file.name;\n    link.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"converter\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Image to WebP Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      accept: \"image/png, image/jpeg\",\n      onChange: handleFileSelection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: convertToWebP,\n      children: \"Convert to WebP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"converted-files\",\n      children: convertedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => downloadFile(file),\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Converter, \"DV18IP5c4f4MeLZJbbBx5sO+080=\");\n_c = Converter;\nexport default Converter;\nvar _c;\n$RefreshReg$(_c, \"Converter\");","map":{"version":3,"names":["React","useState","imageCompression","jsxDEV","_jsxDEV","Converter","_s","selectedFiles","setSelectedFiles","convertedFiles","setConvertedFiles","status","setStatus","handleFileSelection","event","target","files","convertToWebP","length","options","fileType","maxSizeMB","useWebWorker","converted","file","compressedFile","push","error","console","downloadFile","link","document","createElement","href","URL","createObjectURL","download","name","click","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","multiple","accept","onChange","onClick","map","index","_c","$RefreshReg$"],"sources":["/Users/fdc-edwin-nc-fe/Documents/react-webp-converter/image-converter-webapp/src/components/Converter.js"],"sourcesContent":["import React, { useState } from 'react';\nimport imageCompression from 'browser-image-compression';\n\nconst Converter = () => {\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [convertedFiles, setConvertedFiles] = useState([]);\n  const [status, setStatus] = useState(\"\");\n\n  const handleFileSelection = (event) => {\n    setSelectedFiles([...event.target.files]);\n    setConvertedFiles([]);\n    setStatus(\"\");\n  };\n\n  const convertToWebP = async () => {\n    if (!selectedFiles.length) {\n      setStatus(\"Please select images to convert!\");\n      return;\n    }\n\n    const options = {\n      fileType: \"image/webp\",\n      maxSizeMB: 1, // Max size of the output file\n      useWebWorker: true,\n    };\n\n    const converted = [];\n    setStatus(\"Converting images...\");\n    for (const file of selectedFiles) {\n      try {\n        const compressedFile = await imageCompression(file, options);\n        converted.push(compressedFile);\n      } catch (error) {\n        console.error(\"Error converting file:\", error);\n      }\n    }\n\n    setConvertedFiles(converted);\n    setStatus(`${converted.length} images converted successfully!`);\n  };\n\n  const downloadFile = (file) => {\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(file);\n    link.download = file.name;\n    link.click();\n  };\n\n  return (\n    <div className=\"converter\">\n      <h1>Image to WebP Converter</h1>\n      <input\n        type=\"file\"\n        multiple\n        accept=\"image/png, image/jpeg\"\n        onChange={handleFileSelection}\n      />\n      <button onClick={convertToWebP}>Convert to WebP</button>\n      <p>{status}</p>\n\n      <div className=\"converted-files\">\n        {convertedFiles.map((file, index) => (\n          <div key={index}>\n            <p>{file.name}</p>\n            <button onClick={() => downloadFile(file)}>Download</button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Converter;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,gBAAgB,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMY,mBAAmB,GAAIC,KAAK,IAAK;IACrCN,gBAAgB,CAAC,CAAC,GAAGM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC;IACzCN,iBAAiB,CAAC,EAAE,CAAC;IACrBE,SAAS,CAAC,EAAE,CAAC;EACf,CAAC;EAED,MAAMK,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAACV,aAAa,CAACW,MAAM,EAAE;MACzBN,SAAS,CAAC,kCAAkC,CAAC;MAC7C;IACF;IAEA,MAAMO,OAAO,GAAG;MACdC,QAAQ,EAAE,YAAY;MACtBC,SAAS,EAAE,CAAC;MAAE;MACdC,YAAY,EAAE;IAChB,CAAC;IAED,MAAMC,SAAS,GAAG,EAAE;IACpBX,SAAS,CAAC,sBAAsB,CAAC;IACjC,KAAK,MAAMY,IAAI,IAAIjB,aAAa,EAAE;MAChC,IAAI;QACF,MAAMkB,cAAc,GAAG,MAAMvB,gBAAgB,CAACsB,IAAI,EAAEL,OAAO,CAAC;QAC5DI,SAAS,CAACG,IAAI,CAACD,cAAc,CAAC;MAChC,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF;IAEAjB,iBAAiB,CAACa,SAAS,CAAC;IAC5BX,SAAS,CAAC,GAAGW,SAAS,CAACL,MAAM,iCAAiC,CAAC;EACjE,CAAC;EAED,MAAMW,YAAY,GAAIL,IAAI,IAAK;IAC7B,MAAMM,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAACG,IAAI,GAAGC,GAAG,CAACC,eAAe,CAACX,IAAI,CAAC;IACrCM,IAAI,CAACM,QAAQ,GAAGZ,IAAI,CAACa,IAAI;IACzBP,IAAI,CAACQ,KAAK,CAAC,CAAC;EACd,CAAC;EAED,oBACElC,OAAA;IAAKmC,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBpC,OAAA;MAAAoC,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCxC,OAAA;MACEyC,IAAI,EAAC,MAAM;MACXC,QAAQ;MACRC,MAAM,EAAC,uBAAuB;MAC9BC,QAAQ,EAAEnC;IAAoB;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACFxC,OAAA;MAAQ6C,OAAO,EAAEhC,aAAc;MAAAuB,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACxDxC,OAAA;MAAAoC,QAAA,EAAI7B;IAAM;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEfxC,OAAA;MAAKmC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC7B/B,cAAc,CAACyC,GAAG,CAAC,CAAC1B,IAAI,EAAE2B,KAAK,kBAC9B/C,OAAA;QAAAoC,QAAA,gBACEpC,OAAA;UAAAoC,QAAA,EAAIhB,IAAI,CAACa;QAAI;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClBxC,OAAA;UAAQ6C,OAAO,EAAEA,CAAA,KAAMpB,YAAY,CAACL,IAAI,CAAE;UAAAgB,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAFpDO,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtC,EAAA,CAnEID,SAAS;AAAA+C,EAAA,GAAT/C,SAAS;AAqEf,eAAeA,SAAS;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}