{"ast":null,"code":"import React,{useState}from'react';import imageCompression from'browser-image-compression';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Converter=()=>{const[selectedFiles,setSelectedFiles]=useState([]);const[convertedFiles,setConvertedFiles]=useState([]);const[status,setStatus]=useState(\"\");const handleFileSelection=event=>{setSelectedFiles([...event.target.files]);setConvertedFiles([]);setStatus(\"\");};const convertToWebP=async()=>{if(!selectedFiles.length){setStatus(\"Please select images to convert!\");return;}const options={fileType:\"image/webp\",maxSizeMB:1,// Max size of the output file\nuseWebWorker:true};const converted=[];setStatus(\"Converting images...\");for(const file of selectedFiles){try{const compressedFile=await imageCompression(file,options);converted.push(compressedFile);}catch(error){console.error(\"Error converting file:\",error);}}setConvertedFiles(converted);setStatus(`${converted.length} images converted successfully!`);};const downloadFile=file=>{const link=document.createElement(\"a\");link.href=URL.createObjectURL(file);link.download=file.name;link.click();};return/*#__PURE__*/_jsxs(\"div\",{className:\"converter\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Image to WebP Converter\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",multiple:true,accept:\"image/png, image/jpeg\",onChange:handleFileSelection}),/*#__PURE__*/_jsx(\"button\",{onClick:convertToWebP,children:\"Convert to WebP\"}),/*#__PURE__*/_jsx(\"p\",{children:status}),/*#__PURE__*/_jsx(\"div\",{className:\"converted-files\",children:convertedFiles.map((file,index)=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:file.name}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>downloadFile(file),children:\"Download\"})]},index))})]});};export default Converter;","map":{"version":3,"names":["React","useState","imageCompression","jsx","_jsx","jsxs","_jsxs","Converter","selectedFiles","setSelectedFiles","convertedFiles","setConvertedFiles","status","setStatus","handleFileSelection","event","target","files","convertToWebP","length","options","fileType","maxSizeMB","useWebWorker","converted","file","compressedFile","push","error","console","downloadFile","link","document","createElement","href","URL","createObjectURL","download","name","click","className","children","type","multiple","accept","onChange","onClick","map","index"],"sources":["/Users/fdc-edwin-nc-fe/Documents/react-webp-converter/image-converter-webapp/src/components/Converter.js"],"sourcesContent":["import React, { useState } from 'react';\nimport imageCompression from 'browser-image-compression';\n\nconst Converter = () => {\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [convertedFiles, setConvertedFiles] = useState([]);\n  const [status, setStatus] = useState(\"\");\n\n  const handleFileSelection = (event) => {\n    setSelectedFiles([...event.target.files]);\n    setConvertedFiles([]);\n    setStatus(\"\");\n  };\n\n  const convertToWebP = async () => {\n    if (!selectedFiles.length) {\n      setStatus(\"Please select images to convert!\");\n      return;\n    }\n\n    const options = {\n      fileType: \"image/webp\",\n      maxSizeMB: 1, // Max size of the output file\n      useWebWorker: true,\n    };\n\n    const converted = [];\n    setStatus(\"Converting images...\");\n    for (const file of selectedFiles) {\n      try {\n        const compressedFile = await imageCompression(file, options);\n        converted.push(compressedFile);\n      } catch (error) {\n        console.error(\"Error converting file:\", error);\n      }\n    }\n\n    setConvertedFiles(converted);\n    setStatus(`${converted.length} images converted successfully!`);\n  };\n\n  const downloadFile = (file) => {\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(file);\n    link.download = file.name;\n    link.click();\n  };\n\n  return (\n    <div className=\"converter\">\n      <h1>Image to WebP Converter</h1>\n      <input\n        type=\"file\"\n        multiple\n        accept=\"image/png, image/jpeg\"\n        onChange={handleFileSelection}\n      />\n      <button onClick={convertToWebP}>Convert to WebP</button>\n      <p>{status}</p>\n\n      <div className=\"converted-files\">\n        {convertedFiles.map((file, index) => (\n          <div key={index}>\n            <p>{file.name}</p>\n            <button onClick={() => downloadFile(file)}>Download</button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Converter;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,gBAAgB,KAAM,2BAA2B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEzD,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACtB,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAACS,cAAc,CAAEC,iBAAiB,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CACxD,KAAM,CAACW,MAAM,CAAEC,SAAS,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAExC,KAAM,CAAAa,mBAAmB,CAAIC,KAAK,EAAK,CACrCN,gBAAgB,CAAC,CAAC,GAAGM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CACzCN,iBAAiB,CAAC,EAAE,CAAC,CACrBE,SAAS,CAAC,EAAE,CAAC,CACf,CAAC,CAED,KAAM,CAAAK,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CAACV,aAAa,CAACW,MAAM,CAAE,CACzBN,SAAS,CAAC,kCAAkC,CAAC,CAC7C,OACF,CAEA,KAAM,CAAAO,OAAO,CAAG,CACdC,QAAQ,CAAE,YAAY,CACtBC,SAAS,CAAE,CAAC,CAAE;AACdC,YAAY,CAAE,IAChB,CAAC,CAED,KAAM,CAAAC,SAAS,CAAG,EAAE,CACpBX,SAAS,CAAC,sBAAsB,CAAC,CACjC,IAAK,KAAM,CAAAY,IAAI,GAAI,CAAAjB,aAAa,CAAE,CAChC,GAAI,CACF,KAAM,CAAAkB,cAAc,CAAG,KAAM,CAAAxB,gBAAgB,CAACuB,IAAI,CAAEL,OAAO,CAAC,CAC5DI,SAAS,CAACG,IAAI,CAACD,cAAc,CAAC,CAChC,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAChD,CACF,CAEAjB,iBAAiB,CAACa,SAAS,CAAC,CAC5BX,SAAS,CAAC,GAAGW,SAAS,CAACL,MAAM,iCAAiC,CAAC,CACjE,CAAC,CAED,KAAM,CAAAW,YAAY,CAAIL,IAAI,EAAK,CAC7B,KAAM,CAAAM,IAAI,CAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC,CACxCF,IAAI,CAACG,IAAI,CAAGC,GAAG,CAACC,eAAe,CAACX,IAAI,CAAC,CACrCM,IAAI,CAACM,QAAQ,CAAGZ,IAAI,CAACa,IAAI,CACzBP,IAAI,CAACQ,KAAK,CAAC,CAAC,CACd,CAAC,CAED,mBACEjC,KAAA,QAAKkC,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBrC,IAAA,OAAAqC,QAAA,CAAI,yBAAuB,CAAI,CAAC,cAChCrC,IAAA,UACEsC,IAAI,CAAC,MAAM,CACXC,QAAQ,MACRC,MAAM,CAAC,uBAAuB,CAC9BC,QAAQ,CAAE/B,mBAAoB,CAC/B,CAAC,cACFV,IAAA,WAAQ0C,OAAO,CAAE5B,aAAc,CAAAuB,QAAA,CAAC,iBAAe,CAAQ,CAAC,cACxDrC,IAAA,MAAAqC,QAAA,CAAI7B,MAAM,CAAI,CAAC,cAEfR,IAAA,QAAKoC,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAC7B/B,cAAc,CAACqC,GAAG,CAAC,CAACtB,IAAI,CAAEuB,KAAK,gBAC9B1C,KAAA,QAAAmC,QAAA,eACErC,IAAA,MAAAqC,QAAA,CAAIhB,IAAI,CAACa,IAAI,CAAI,CAAC,cAClBlC,IAAA,WAAQ0C,OAAO,CAAEA,CAAA,GAAMhB,YAAY,CAACL,IAAI,CAAE,CAAAgB,QAAA,CAAC,UAAQ,CAAQ,CAAC,GAFpDO,KAGL,CACN,CAAC,CACC,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAzC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}